#!/bin/bash

# Prevent automatically running the script on the current host

{{- if ne .chezmoi.hostname "pop-os" }}

# Install curl, wget, apt-transport-https and ca-certificates

sudo apt update
sudo apt install -y curl wget apt-transport-https ca-certificates

# Install fonts

wget -P ~/.local/share/fonts "https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/FiraCode/Regular/FiraCodeNerdFont-Regular.ttf"
wget -P ~/.local/share/fonts "https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/RobotoMono/Regular/RobotoMonoNerdFont-Regular.ttf"

# Add Element

sudo wget -O /usr/share/keyrings/element-io-archive-keyring.gpg https://packages.element.io/debian/element-io-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/element-io-archive-keyring.gpg] https://packages.element.io/debian/ default main" | sudo tee /etc/apt/sources.list.d/element-io.list

# Add GitHub CLI

sudo mkdir -p -m 755 /etc/apt/keyrings
wget -qO- https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null
sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null

# Add Signal

wget -O- https://updates.signal.org/desktop/apt/keys.asc | gpg --dearmor > signal-desktop-keyring.gpg
cat signal-desktop-keyring.gpg | sudo tee /usr/share/keyrings/signal-desktop-keyring.gpg > /dev/null
echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/signal-desktop-keyring.gpg] https://updates.signal.org/desktop/apt xenial main' | sudo tee /etc/apt/sources.list.d/signal-xenial.list

# Add Spotify

curl -sS https://download.spotify.com/debian/pubkey_6224F9941A8AA6D1.gpg | sudo gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/spotify.gpg
echo "deb http://repository.spotify.com stable non-free" | sudo tee /etc/apt/sources.list.d/spotify.list

# Add Syncthing

sudo mkdir -p /etc/apt/keyrings
sudo curl -L -o /etc/apt/keyrings/syncthing-archive-keyring.gpg https://syncthing.net/release-key.gpg
echo "deb [signed-by=/etc/apt/keyrings/syncthing-archive-keyring.gpg] https://apt.syncthing.net/ syncthing stable" | sudo tee /etc/apt/sources.list.d/syncthing.list
printf "Package: *\nPin: origin apt.syncthing.net\nPin-Priority: 990\n" | sudo tee /etc/apt/preferences.d/syncthing.pref

# Add Wine

sudo dpkg --add-architecture i386
sudo mkdir -pm755 /etc/apt/keyrings
sudo wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key
sudo wget -NP /etc/apt/sources.list.d/ https://dl.winehq.org/wine-builds/ubuntu/dists/noble/winehq-noble.sources

# Add Kisak Mesa PPA and pin

sudo add-apt-repository -y ppa:kisak/kisak-mesa
printf "Package: *\nPin: release o=LP-PPA-kisak-kisak-mesa\nPin-Priority: 2000\n" | sudo tee /etc/apt/preferences.d/kisak-mesa

# Add fish PPA

sudo apt-add-repository -y ppa:fish-shell/release-3

# Add Helix editor PPA

sudo add-apt-repository -y ppa:maveonair/helix-editor

# Add fastfetch PPA

sudo add-apt-repository -y ppa:zhangsongcui3371/fastfetch

# Install APT packages

sudo apt update && sudo apt upgrade -y

sudo apt install -y \
bat \
code \
discord \
element-desktop \
fd-find \
ffmpeg \
fish \
flameshot \
firejail \
fzf \
gamemode \
gh \
github-desktop \
gufw \
helix \
htop \
hugo \
mingw-w64 \
mpv \
nala \
fastfetch \
obs-studio \
peek \
ppa-purge \
restic \
rclone \
signal-desktop \
spotify-client \
stacer \
steam \
stow \
streamlink \
syncthing \
timeshift \
transmission \
v4l2loopback-dkms \
virtualbox \
vlc \
zoxide

sudo apt install -y --install-recommends winehq-staging

# Install Flatpak packages

flatpak update

flatpak install -y flathub \
com.usebottles.bottles \
io.github.celluloid_player.Celluloid \
com.github.tchx84.Flatseal \
org.gimp.GIMP \
com.heroicgameslauncher.hgl \
org.kde.kdenlive \
io.gitlab.librewolf-community \
org.gnome.Lollypop \
net.lutris.Lutris \
com.mattermost.Desktop \
org.onionshare.OnionShare \
com.github.paolostivanin.OTPClient \
org.prismlauncher.PrismLauncher \
net.davidotek.pupgui2 \
org.remmina.Remmina \
chat.revolt.RevoltDesktop \
com.github.micahflee.torbrowser-launcher

# Install and run the AppImage daemon

systemctl --user stop appimaged.service || true
sudo apt-get -y remove appimagelauncher || true
rm "$HOME"/.local/share/applications/appimage*
[ -f ~/.config/systemd/user/default.target.wants/appimagelauncherd.service ] && rm ~/.config/systemd/user/default.target.wants/appimagelauncherd.service
mkdir -p ~/Applications
wget -c https://github.com/$(wget -q https://github.com/probonopd/go-appimage/releases/expanded_assets/continuous -O - | grep "appimaged-.*-x86_64.AppImage" | head -n 1 | cut -d '"' -f 2) -P ~/Applications/
chmod +x ~/Applications/appimaged-*.AppImage
~/Applications/appimaged-*.AppImage

# Install Rust

curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

# Install Go
# Cross-platform installer (experimental):
# curl -LO https://get.golang.org/$(uname)/go_installer && chmod +x go_installer && ./go_installer && rm go_installer

wget "https://go.dev/dl/$(curl 'https://go.dev/VERSION?m=text' | head -1).linux-amd64.tar.gz"
sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go*.linux-amd64.tar.gz
rm go*.linux-amd64.tar.gz

# Install Python

sudo apt install -y python3 python3-dev python3-pip python3-venv pipx build-essential libssl-dev libffi-dev

# Install Java

sudo apt install -y default-jdk

# Install Rust packages

cargo install --locked git-delta
cargo install eza

# Install Starship

curl -sS https://starship.rs/install.sh | sh

# Install Node Version Manager

curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.0/install.sh | bash

# Install Netlify CLI

npm install netlify-cli -g

# Clean up

sudo apt autoremove -y
sudo apt clean
flatpak uninstall --unused

{{- end }}
